package greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import greendao.User;
import greendao.Session;
import greendao.Asset;

import greendao.UserDao;
import greendao.SessionDao;
import greendao.AssetDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig sessionDaoConfig;
    private final DaoConfig assetDaoConfig;

    private final UserDao userDao;
    private final SessionDao sessionDao;
    private final AssetDao assetDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        sessionDaoConfig = daoConfigMap.get(SessionDao.class).clone();
        sessionDaoConfig.initIdentityScope(type);

        assetDaoConfig = daoConfigMap.get(AssetDao.class).clone();
        assetDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        sessionDao = new SessionDao(sessionDaoConfig, this);
        assetDao = new AssetDao(assetDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Session.class, sessionDao);
        registerDao(Asset.class, assetDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        sessionDaoConfig.getIdentityScope().clear();
        assetDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public SessionDao getSessionDao() {
        return sessionDao;
    }

    public AssetDao getAssetDao() {
        return assetDao;
    }

}
